#!bin/bash

echo "Enter the name of vm source"
read Source_VM
echo "Enter names of new VMS [use the space button to enter the next name of the new VM - example: VM1 VM2]"
read New_VMs
Resource_Group=$(az vm list -d -o table --query "[?name== '$Source_VM']" | awk 'NR==3 {print $NF}')

echo "Checking..."

if [ "$(az vm list -d -o table --query "[?name=='$Source_VM']")" == "" ];
	then
		echo "VM $Source_VM not exists"
		exit
	fi

for current_vm in $New_VMs
do
	if [ "$(az vm list -d -o table --query "[?name=='$current_vm']")" != "" ];
	then
		echo "VM $current_vm exists"
		exit
	fi

done

echo "Starting.."

snapshot_os=SnapShootOSdisk_$Source_VM

Interface_ID=$(az vm show -g $Resource_Group -n $Source_VM --query networkProfile.networkInterfaces[0].id |tr -d '"' ) 
Nsg=$(az network nic show --id $Interface_ID --query networkSecurityGroup.id| tr -d '"')
Subnet=$(az network nic show --id $Interface_ID --query ipConfigurations[0].Subnet.id| tr -d '"')
Size=$(az vm show -g $Resource_Group -n $Source_VM --query hardwareProfile.vmSize | tr -d '"' )
Number_Datadisk=$(az vm show -d -g $Resource_Group -n $Source_VM --query "storageProfile.dataDisks[].managedDisk.id" |  tr -d '[,],"' |sed '/^[[:space:]]*$/d' |wc -l)
IDS_Data_Disks=$(az vm show -d -g $Resource_Group -n $Source_VM --query "storageProfile.dataDisks[].managedDisk.id" |  tr -d '[,],"' |sed '/^[[:space:]]*$/d')
OS_Disk_ID=$(az vm show -g $Resource_Group -n $Source_VM --query storageProfile.osDisk.managedDisk.id | tr -d '"')
OS_Disk_Type=$(az disk show --ids $OS_Disk_ID --query sku.name | tr -d '"')
OS_Type=$(az vm show -g $Resource_Group -n $Source_VM --query storageProfile.osDisk.osType | tr -d '"')
Disk_Gen=$(az disk show --ids $OS_Disk_ID --query hyperVGeneration | tr -d '"')

az snapshot create -g $Resource_Group -n $snapshot_os --source $OS_Disk_ID > /dev/null 2>&1


for current_vm in $New_VMs
do
	az disk create --os-type $OS_Type -g $Resource_Group -n OS_disk_$current_vm --sku $OS_Disk_Type --hyper-v-generation $Disk_Gen --source $snapshot_os > /dev/null 2>&1
	az vm create -g $Resource_Group -n $current_vm --public-ip-address "" --attach-os-disk OS_disk_$current_vm --Subnet $Subnet --Nsg $Nsg --Size $Size --os-type $OS_Type > /dev/null 2>&1
	
	if [ $Number_Datadisk > 0 ]
	then 
		for (( n=1; n<=$Number_Datadisk; n++ ))
		do
			DATA_Disk_ID=$(echo $IDS_Data_Disks | awk -v n=$n '{print $n}')
			DATA_Disk_Type=$(az disk show --ids $DATA_Disk_ID --query sku.name | tr -d '"')
			az snapshot create -g $Resource_Group -n SnapShootDatadisk$n --source $DATA_Disk_ID > /dev/null 2>&1
			az disk create --os-type $OS_Type -g $Resource_Group -n data_disk_$current_vm-$n --sku $DATA_Disk_Type --source SnapShootDatadisk$n > /dev/null 2>&1
			az vm disk attach -g $Resource_Group --vm-name $current_vm -n data_disk_$current_vm-$n > /dev/null 2>&1
		done			
	az vm list -d -o table --query "[?name== '$current_vm']"
	echo ""
	fi
done

echo "Removing SnapShots..."

az snapshot delete -g $Resource_Group -n $snapshot_os > /dev/null 2>&1

if [ $Number_Datadisk > 0 ]
then 
	for (( n=1; n<=$Number_Datadisk; n++ ))
	do
		az snapshot delete -g $Resource_Group -n SnapShootDatadisk$n > /dev/null 2>&1
	done	
fi	
echo "Done!"

