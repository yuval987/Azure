#!/bin/bash

Run_Write() {
	cmd=$1
	msg=$2
	$cmd > /dev/null 2>&1
	Retval=$?
	if [ $Retval -ne 0 ]
	then
		msg="Faild to :"$msg
		echo $msg >> Info_VMS.txt
	else
		msg="Success to: "$msg 
		echo $msg >> Info_VMS.txt
  fi
}

echo "Delete a multi VMs with all the parts"
sleep 2
echo "enter a Resource Group:"
read Resource_Group
Check_Exists_RG=$(az group exists -n $Resource_Group)
Retval="$?"
if [ "$Check_Exists_RG" = "false" ] || [ "$Retval" -ne 0 ]
then
	echo "Resource Group $Resource_Group not exists"
	exit
fi
echo "enter the VM names that you would like to remove: [use the space button to enter the next name of the new VM - example: VM1 VM2]"
read VMs_Name
Count_VMs=$(echo $VMs_Name | wc -w)
echo "checking....."
for Current_VM in $VMs_Name
do
	if [ "$(az vm list -d -o table --query "[?name=='$Current_VM']")" = "" ];
	then
		echo "VM $Current_VM not exists"
		exit
	fi
	az vm show -g $Resource_Group -n $Current_VM > /dev/null 2>&1
	Retval="$?"
	if [ "$Retval" -ne 0 ]
	then
		echo "$Current_VM not exists in $Resource_Group"
		exit
	fi
done
echo "Report:" > Info_VMS.txt
echo "starting to delete..."
for Current_VM in $VMs_Name
do
	echo "VM name: $Current_VM" >> Info_VMS.txt
	Interface_ID=$(az vm show -g $Resource_Group -n $Current_VM --query networkProfile.networkInterfaces[0].id |tr -d '"' ) 
	OS_Disk_ID=$(az vm show -g $Resource_Group -n $Current_VM --query storageProfile.osDisk.managedDisk.id | tr -d '"')
	Security_Group_ID=$(az network nic show --id $Interface_ID --query networkSecurityGroup.id | tr -d '"') 
	Public_IP_ID=$(az network nic show --id $Interface_ID --query ipConfigurations[0].publicIpAddress.id | tr -d '"'}) 
	Number_DataDisks=$(az vm show -d -g $Resource_Group -n $Current_VM --query "storageProfile.dataDisks[].managedDisk.id" |  tr -d '[,],"' |sed '/^[[:space:]]*$/d' |wc -l) 
	IDS_Data_Disks=$(az vm show -d -g $Resource_Group -n $Current_VM --query "storageProfile.dataDisks[].managedDisk.id" |  tr -d '[,],"' |sed '/^[[:space:]]*$/d') 

	
	Run_Write "az vm delete -g $Resource_Group -n $Current_VM --yes" "deleted vm"
	Run_Write "az network nic delete --id $Interface_ID" "deleted network interface: $Interface_ID"
	Run_Write "az disk delete --id $OS_Disk_ID --yes" "deleted os disk: $OS_Disk_ID"
	Run_Write "az network public-ip delete --id $Public_IP_ID" "deleted public ip: $Public_IP_ID"
	Run_Write "az network nsg delete --id $Security_Group_ID" "deleted network security group: $Security_Group_ID"
	

	if [ $Number_DataDisks > 0 ]
	then 
		for (( n=1; n<=$Number_DataDisks; n++ ))
		do
			ID_disk=$(echo $IDS_Data_Disks | awk -v n=$n '{print $n}')
			Run_Write "az disk delete --id $ID_disk --yes" "Deleted os disk $ID_disk"
		done			
	fi
	
	echo "----------------------------------------------------------" >> Info_VMS.txt
	echo "Deleting VM $Current_VM is completed"

done
echo "The process is completed"
echo "Do you want to get a report of the process? (y/n)"
read Answer
if [ $Answer = 'y' ]
then
	cat Info_VMS.txt
else
	exit
fi
